{"version":3,"file":"component---src-pages-index-js-4a5b2059d2246eec47f0.js","mappings":"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","sources":["webpack://royal-flowers/./node_modules/camelcase/index.js","webpack://royal-flowers/../src/image-utils.ts","webpack://royal-flowers/../src/components/hooks.ts","webpack://royal-flowers/../src/components/layout-wrapper.tsx","webpack://royal-flowers/../src/components/picture.tsx","webpack://royal-flowers/../src/components/placeholder.tsx","webpack://royal-flowers/../src/components/main-image.tsx","webpack://royal-flowers/../src/components/gatsby-image.server.tsx","webpack://royal-flowers/../src/components/gatsby-image.browser.tsx","webpack://royal-flowers/../src/components/static-image.server.tsx","webpack://royal-flowers/../src/components/static-image.tsx","webpack://royal-flowers/./node_modules/@tabler/icons-react/dist/esm/defaultAttributes.js","webpack://royal-flowers/./node_modules/@tabler/icons-react/dist/esm/createReactComponent.js","webpack://royal-flowers/./node_modules/@tabler/icons-react/dist/esm/icons/IconMenu2.js","webpack://royal-flowers/./node_modules/@tabler/icons-react/dist/esm/icons/IconSearch.js","webpack://royal-flowers/./src/components/header.jsx","webpack://royal-flowers/./src/components/slider.jsx","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/resize/handle-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/resize/handle-window.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/resize/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/wrap.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/sequence/create.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://royal-flowers/./node_modules/@tabler/icons-react/dist/esm/icons/IconMouse.js","webpack://royal-flowers/./src/pages/index.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","/**\n * @tabler/icons-react v2.47.0 - MIT\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @tabler/icons-react v2.47.0 - MIT\n */\n\nimport { forwardRef, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultAttributes from './defaultAttributes.js';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar createReactComponent = (iconName, iconNamePascal, iconNode) => {\n  const Component = forwardRef(\n    (_a, ref) => {\n      var _b = _a, { color = \"currentColor\", size = 24, stroke = 2, children } = _b, rest = __objRest(_b, [\"color\", \"size\", \"stroke\", \"children\"]);\n      return createElement(\n        \"svg\",\n        __spreadValues(__spreadProps(__spreadValues({\n          ref\n        }, defaultAttributes), {\n          width: size,\n          height: size,\n          stroke: color,\n          strokeWidth: stroke,\n          className: `tabler-icon tabler-icon-${iconName}`\n        }), rest),\n        [...iconNode.map(([tag, attrs]) => createElement(tag, attrs)), ...children || []]\n      );\n    }\n  );\n  Component.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    stroke: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  };\n  Component.displayName = `${iconNamePascal}`;\n  return Component;\n};\n\nexport { createReactComponent as default };\n//# sourceMappingURL=createReactComponent.js.map\n","/**\n * @tabler/icons-react v2.47.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconMenu2 = createReactComponent(\"menu-2\", \"IconMenu2\", [\n  [\"path\", { d: \"M4 6l16 0\", key: \"svg-0\" }],\n  [\"path\", { d: \"M4 12l16 0\", key: \"svg-1\" }],\n  [\"path\", { d: \"M4 18l16 0\", key: \"svg-2\" }]\n]);\n\nexport { IconMenu2 as default };\n//# sourceMappingURL=IconMenu2.js.map\n","/**\n * @tabler/icons-react v2.47.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconSearch = createReactComponent(\"search\", \"IconSearch\", [\n  [\"path\", { d: \"M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0\", key: \"svg-0\" }],\n  [\"path\", { d: \"M21 21l-6 -6\", key: \"svg-1\" }]\n]);\n\nexport { IconSearch as default };\n//# sourceMappingURL=IconSearch.js.map\n","import * as React from 'react'\nimport info from '../info.json'\nimport { Link } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { IconSearch, IconMenu2 } from '@tabler/icons-react'\n\nexport default function Header() {\n\n    const menuLeft = info.header.menuLeft.map((item)=>{\n        \n        return(\n            <Link to={item.url} className='uppercase mt-[4px] no-underline hover:underline underline-offset-8'>{item.value}</Link>      \n        )\n\n    })\n\n    const menuRight = info.header.menuRight.map((item)=>{\n        \n\n        console.log(item);\n\n        return(\n            <Link to={item.url} className='uppercase mt-[4px] no-underline hover:underline underline-offset-8'>{item.value}</Link>      \n        )\n\n    })\n\n    return(\n        <header className='w-[100%] z-10 bg-cream fixed'>\n            {/* Phone */}\n            <div className='flex flex-row justify-between py-3 px-[20px] border-b border-charcoal lg:hidden'>\n                <div className=' flex justify-center' style={{height: \"100%\"}}>\n                    <StaticImage className='max-w-[180px] bg-cover my-auto' placeholder=\"color\" src='../images/logo-royal-flower.png'/>\n                </div>\n                <nav className='flex-1 flex flex-row gap-4 justify-end items-center'>\n                    <StaticImage className='max-w-[26px] bg-cover my-auto' placeholder=\"color\" src='../images/icon-royal-flowers.png'/>\n                    <IconMenu2 stroke={1} />\n                </nav>\n            </div>\n            {/* Desktop */}\n\n            <div className='flex flex-row justify-between py-3 px-[20px] border-b border-charcoal hidden lg:flex'>\n                <nav className='flex-1 flex flex-row gap-4 items-center'>\n                    {menuLeft}\n                </nav>\n                <div className=' flex justify-center' style={{height: \"100%\"}}>\n                    <StaticImage className='max-w-[180px] bg-cover my-auto' placeholder=\"color\" src='../images/logo-royal-flower.png'/>\n                </div>\n                <nav className='flex-1 flex flex-row gap-4 justify-end items-center'>\n                    {menuRight}\n                    <StaticImage className='max-w-[26px] bg-cover my-auto' placeholder=\"color\" src='../images/icon-royal-flowers.png'/>\n                    <IconMenu2 stroke={1} />\n\n                </nav>\n            </div>\n            <div className='flex flex-row py-3 px-[20px] border-b border-charcoal gap-3'>\n                <IconSearch className='mt-[1px] align-middle' />\n\n                <input type=\"text\" className='mt-[4px] w-full bg-cream uppercase placeholder:text-gray border-none rounded-none focus:outline-none' placeholder={info.header.searchBar.text}/>\n            </div>\n        </header>\n    )\n}","import * as React from 'react'\nimport info from '../info.json'\nimport { Link } from 'gatsby'\nimport { GatsbyImage, StaticImage } from 'gatsby-plugin-image'\n\n\nexport default function Slider(){\n\n    React.useEffect(()=>{\n        const slider = document.getElementById(\"product-slider\")\n        slider.addEventListener('wheel', (e)=>{\n            e.preventDefault()\n            slider.scrollLeft += e.deltaY * 3;\n        })\n\n    })\n\n    const colors = ['#2431F5', '#24F5CC', '#C8F524', \"#F52E24\"]\n\n\n    const products =[...info.slider.products, ...info.slider.products].map((product)=>{\n        \n        console.log(product.image)\n\n        return(\n            <div className=\"w-[400px] h-[60%] snap-center\">\n                <img src={product.image} alt=\"\" className='h-full'/>\n            </div>\n        )\n    })\n\n    return(\n\n        <div className=\"w-full h-[100vh] grid grid-flow-col auto-cols-max items-center gap-3 overflow-x-auto overflow-y scroll scroll-smooth whitespace-nowrap flex-nowrap snap-x\" id='product-slider'>\n                    <StaticImage src=\"../images/BLACK_MAGIC-1\" alt=\"\" className=''/>\n\n            {products}\n        </div>\n    )\n\n}","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { progress } from '../../../utils/progress.mjs';\nimport { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { namedEdges, resolveEdge } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { calcInset } from './inset.mjs';\nimport { ScrollOffset } from './presets.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { interpolate } from '../../../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../../../utils/offsets/default.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction getTargetSize(target) {\n    return \"getBBox\" in target && target.tagName !== \"svg\"\n        ? target.getBBox()\n        : { width: target.clientWidth, height: target.clientHeight };\n}\nfunction resolveOffsets(container, info, options) {\n    const { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : getTargetSize(target);\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition));\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = info[axis].interpolate(info[axis].current);\n}\n\nexport { resolveOffsets };\n","function calcInset(element, container) {\n    const inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current.tagName === \"svg\") {\n            /**\n             * This isn't an ideal approach to measuring the offset of <svg /> tags.\n             * It would be preferable, given they behave like HTMLElements in most ways\n             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we\n             * can't use .getBBox() like most SVG elements as these provide the offset\n             * relative to the SVG itself, which for <svg /> is usually 0x0.\n             */\n            const svgBoundingBox = current.getBoundingClientRect();\n            current = current.parentElement;\n            const parentBoundingBox = current.getBoundingClientRect();\n            inset.x += svgBoundingBox.left - parentBoundingBox.left;\n            inset.y += svgBoundingBox.top - parentBoundingBox.top;\n        }\n        else if (current instanceof SVGGraphicsElement) {\n            const { x, y } = current.getBBox();\n            inset.x += x;\n            inset.y += y;\n            let svg = null;\n            let parent = current.parentNode;\n            while (!svg) {\n                if (parent.tagName === \"svg\") {\n                    svg = parent;\n                }\n                parent = current.parentNode;\n            }\n            current = svg;\n        }\n        else {\n            break;\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { warnOnce } from '../../../utils/warn-once.mjs';\nimport { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n    /**\n     * In development mode ensure scroll containers aren't position: static as this makes\n     * it difficult to measure their relative positions.\n     */\n    if (process.env.NODE_ENV !== \"production\") {\n        if (container && target && target !== container) {\n            warnOnce(getComputedStyle(container).position !== \"static\", \"Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.\");\n        }\n    }\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { resize } from '../resize/index.mjs';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.documentElement, ...options } = {}) {\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers)\n                handler.measure();\n        };\n        const updateAll = () => {\n            for (const handler of containerHandlers) {\n                handler.update(frameData.timestamp);\n            }\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        const listener = () => {\n            frame.read(measureAll, false, true);\n            frame.read(updateAll, false, true);\n            frame.update(notifyAll, false, true);\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        var _a;\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n","import { resizeElement } from './handle-element.mjs';\nimport { resizeWindow } from './handle-window.mjs';\n\nfunction resize(a, b) {\n    return typeof a === \"function\" ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { scrollInfo } from './track.mjs';\nimport { observeTimeline } from './observe.mjs';\nimport { supportsScrollTimeline } from './supports.mjs';\n\nfunction scrollTimelineFallback({ source, axis = \"y\" }) {\n    // ScrollTimeline records progress as a percentage CSSUnitValue\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[axis].progress * 100;\n    }, { container: source, axis });\n    return { currentTime, cancel };\n}\nconst timelineCache = new Map();\nfunction getTimeline({ source = document.documentElement, axis = \"y\", } = {}) {\n    if (!timelineCache.has(source)) {\n        timelineCache.set(source, {});\n    }\n    const elementCache = timelineCache.get(source);\n    if (!elementCache[axis]) {\n        elementCache[axis] = supportsScrollTimeline()\n            ? new ScrollTimeline({ source, axis })\n            : scrollTimelineFallback({ source, axis });\n    }\n    return elementCache[axis];\n}\nfunction scroll(onScroll, options) {\n    const timeline = getTimeline(options);\n    if (typeof onScroll === \"function\") {\n        return observeTimeline(onScroll, timeline);\n    }\n    else {\n        return onScroll.attachTimeline(timeline);\n    }\n}\n\nexport { scroll };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return resolvedKeyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { frame, cancelFrame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.unsetTransforms();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureInitialState();\n        });\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.renderEndStyles();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureEndState();\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n    frame.resolveKeyframes(measureAllKeyframes);\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n    cancelFrame(readAllKeyframes);\n    cancelFrame(measureAllKeyframes);\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    unsetTransforms() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, removeNonTranslationalTransform, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        const noneKeyframeIndexes = [];\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (!originType || !targetType || originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    unsetTransforms() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        this.removedTransforms = removeNonTranslationalTransform(element);\n        const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        element.getValue(name, finalKeyframe).jump(finalKeyframe, false);\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n    }\n    renderEndStyles() {\n        this.element.render();\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        unresolvedKeyframes[unresolvedKeyframes.length - 1] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (name === \"height\" && this.suspendedScrollY !== undefined) {\n            window.scrollTo(0, this.suspendedScrollY);\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                const finalKeyframe = getFinalKeyframe(keyframes, this.options);\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(finalKeyframe);\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        this._resolved = {\n            keyframes,\n            ...this.initPlayback(keyframes),\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = () => {\n                resolve();\n                this.updateFinishedPromise();\n            };\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes) => this.onKeyframesResolved(resolvedKeyframes);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = this.resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        return millisecondsToSeconds(this.resolved.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.state = \"idle\";\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.teardown();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes) => this.onKeyframesResolved(resolvedKeyframes), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes) {\n        let duration = this.options.duration || 300;\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const { motionValue, name } = this.options;\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { duration } = this.resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { animation } = this.resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { animation } = this.resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { animation } = this.resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { animation } = this.resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { animation } = this.resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { animation } = this.resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { animation } = this.resolved;\n        animation.play();\n    }\n    pause() {\n        const { animation } = this.resolved;\n        animation.pause();\n    }\n    stop() {\n        this.isStopped = true;\n        const { animation, keyframes } = this.resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            motionValue.setWithVelocity(sampleAnimation.sample(this.time - sampleDelta).value, sampleAnimation.sample(this.time).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        this.resolved.animation.finish();\n    }\n    cancel() {\n        this.resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.12\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * @tabler/icons-react v2.47.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconMouse = createReactComponent(\"mouse\", \"IconMouse\", [\n  [\n    \"path\",\n    {\n      d: \"M6 3m0 4a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v10a4 4 0 0 1 -4 4h-4a4 4 0 0 1 -4 -4z\",\n      key: \"svg-0\"\n    }\n  ],\n  [\"path\", { d: \"M12 7l0 4\", key: \"svg-1\" }]\n]);\n\nexport { IconMouse as default };\n//# sourceMappingURL=IconMouse.js.map\n","import * as React from \"react\"\nimport Header from '../components/header'\nimport Slider from \"../components/slider\"\n\nimport info from \"../info.json\"\nimport { animate, motion, scroll } from \"framer-motion\"\n\nimport { IconMouse } from \"@tabler/icons-react\"\n\n\nexport default function IndexPage(){\n\n  React.useEffect(()=>{\n\n    const hero = document.getElementById('hero-video')\n\n    // transform: [\"none\", \"translateY(-100%)\"],\n    scroll(\n      animate(hero, { opacity: [100, 0]}, {duration: 1})\n    )\n  })\n  \n\n\n  return (\n    <main className=\"flex flex-col\">\n      <Header/>\n\n\n      {/* HERO */}\n      <motion.div \n          className=\"overflow-hidden t-0 l-0 min-w-[100%] min-h-[100vh] h-[100vh] bg-charcoal relative\"\n          id=\"hero-video\"\n        >\n        <div className=\"z-10 w-full absolute bottom-0 pb-[10vh]\">\n          <div className=\"flex flex-col justify-center items-center gap-5\">\n            <IconMouse className=\"cream\" color=\"#F6F5F2\" size={50} stroke={1}/>\n            <span className=\"uppercase text-md text-cream\">{info.hero.text}</span>\n          </div>\n        </div>\n        <video autoPlay muted loop className=\"min-h-[100vh] min-w-[100%] opacity-60 z-0 absolute\">\n          <source src=\"/static/homepage-hero-video.mp4\" type=\"video/mp4\"/>\n        </video>\n\n      </motion.div>\n\n      <Slider/>\n      \n    </main>\n  )\n}\n\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","hasNativeLazyLoadSupport","HTMLImageElement","prototype","srcSet","width","height","layout","wrapperStyle","className","style","getMainProps","isLoading","isLoaded","images","loading","shouldLoad","_extends","opacity","getPlaceholderProps","placeholder","backgroundColor","objectFit","objectPosition","position","top","left","bottom","right","result","transition","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","_ref","children","props","_objectWithoutPropertiesLoose","Fragment","Image","decoding","Picture","_ref2","fallback","sources","sizes","media","type","key","fallbackImage","propTypes","PropTypes","isRequired","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","image","_excluded","Set","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","console","warn","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","number","validLayouts","GatsbyImageBrowser","defaultAttributes","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","createReactComponent","iconName","iconNamePascal","iconNode","Component","forwardRef","_a","_b","color","size","exclude","target","indexOf","__objRest","tag","attrs","IconMenu2","d","IconSearch","Header","menuLeft","info","item","Link","to","url","menuRight","log","S","Slider","slider","document","getElementById","e","preventDefault","scrollLeft","deltaY","products","product","id","noop","any","warning","invariant","resolveElements","elements","scope","selectorCache","Boolean","querySelectorAll","Element","from","resizeHandlers","WeakMap","observer","notifyTarget","contentRect","borderBoxSize","get","forEach","handler","contentSize","inlineSize","blockSize","SVGElement","getBBox","offsetWidth","offsetHeight","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","element","elementHandlers","set","observe","delete","unobserve","windowCallbacks","windowResizeHandler","resizeWindow","callback","window","innerWidth","innerHeight","undefined","progress","toFromDifference","velocityPerSecond","velocity","frameDuration","maxElapsed","createScrollInfo","time","offset","scrollLength","targetOffset","targetLength","containerLength","y","keys","updateAxisInfo","axisName","axis","prev","prevTime","elapsed","ScrollOffset","Enter","Exit","Any","All","namedEdges","start","center","end","resolveEdge","edge","inset","delta","asNumber","parseFloat","endsWith","documentElement","clientWidth","clientHeight","defaultOffset","resolveOffset","targetInset","offsetDefinition","targetPoint","containerPoint","includes","split","clamp","min","max","v","combineFunctions","pipe","transformers","reduce","mixNumber","hueToRgb","p","q","t","parse","transform","alpha","scale","default","sanitize","Math","round","floatRegex","colorRegex","singleColorRegex","isString","isColorString","testProp","startsWith","splitColor","aName","bName","cName","c","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","parsedValue","push","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","isNaN","getAnimatableNone","parsed","transformer","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","mixImmediate","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","isClamp","ease","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","fillOffset","remaining","offsetProgress","arr","point","resolveOffsets","container","lengthLabel","HTMLElement","offsetLeft","offsetTop","offsetParent","tagName","svgBoundingBox","getBoundingClientRect","parentElement","parentBoundingBox","SVGGraphicsElement","svg","parent","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","getTargetSize","containerSize","hasChanged","numOffsets","interpolatorOffsets","createOnScrollHandler","onScroll","measure","node","update","updateScrollInfo","notify","MotionGlobalConfig","Queue","constructor","this","order","scheduled","process","remove","index","splice","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","timestamp","isProcessing","steps","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","cancelFrame","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scrollInfo","containerHandlers","containerHandler","measureAll","updateAll","listener","read","passive","currentHandlers","scrollListener","observeTimeline","timeline","prevProgress","onFrame","currentTime","supportsScrollTimeline","ScrollTimeline","timelineCache","Map","getTimeline","elementCache","scrollTimelineFallback","visualElementStore","GroupPlaybackControls","animations","onResolve","onReject","Promise","all","catch","getAll","setAll","newValue","attachTimeline","cancelAll","animation","pause","duration","cancelTimeline","stop","speed","runAll","methodName","controls","play","transformPropOrder","transformProps","camelToDash","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","getDefaultTransition","valueKey","keyframes","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","clearTime","newTime","queueMicrotask","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","paddingLeft","paddingRight","paddingBottom","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolver","needsMeasurement","unsetTransforms","measureInitialState","renderEndStyles","measureEndState","readAllKeyframes","readKeyframes","resolveKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","resume","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","super","owner","noneKeyframeIndexes","keyframe","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","originType","targetType","removedTransforms","visualElement","getValue","render","removeNonTranslationalTransform","jump","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","scrollTo","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","isEasingArray","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframeValues","times","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","playbackSpeed","pendingPlayState","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","onPlay","onStop","teardown","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","animate","iterations","direction","animateStyle","pendingTimeline","onfinish","playbackRate","playState","setWithVelocity","static","getProps","animateMotionValue","isHandoff","valueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","isMotionValue","isWillChangeMotionValue","isKeyframesTarget","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","removeItem","SubscriptionManager","subscriptions","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","resolveVariantFromProps","custom","currentValues","variants","resolveVariant","getCurrent","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","willChange","animationTypeState","animationState","getState","latestValues","valueTarget","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","isSVGElement","scaleCorrectors","isForcedMotionValue","layoutId","scrapeMotionValuesFromProps","prevProps","newValues","createDelta","translate","originPoint","createBox","isRefObject","isBrowser","prefersReducedMotion","hasReducedMotionListener","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","featureProps","exit","drag","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","projection","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","initialMotionValues","_props","_prevProps","mount","instance","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","unmount","valueIsTransform","removeOnChange","latestValue","preRender","isTransformDirty","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","loadFeatures","renderedProps","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","Feature","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","dragConstraints","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","updateFeatures","feature","isMounted","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevPresenceContext","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getTransformPagePoint","transformPagePoint","getClosestVariantNode","getVariantContext","startAtParent","context","child","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","args","DOMVisualElement","arguments","compareDocumentPosition","vars","translateAlias","numTransforms","getValueAsType","buildHTMLStyles","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","calcOrigin","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","camelCaseAttributes","renderHTML","styleProp","assign","getProjectionStyles","setProperty","renderSVG","_styleProp","setAttribute","SVGVisualElement","defaultType","getAttribute","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transformPoint","topLeft","bottomRight","transformBoxPoints","HTMLVisualElement","computedStyle","childSubscription","textContent","createVisualElement","animateSingleValue","motionValue$1","createGeneratorEasing","calcNextTime","labels","wrap","rangeSize","getEasingForSegment","addKeyframes","sequence","endTime","at","eraseKeyframes","compareByTime","defaultSegmentEasing","getSubjectSequence","subject","sequences","getValueSequence","keyframesAsList","isNumber","isNumberKeyframesArray","animateElements","elementOrSelector","numElements","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","defaultDuration","timeLabels","segment","resolveValueSequence","valueKeyframes","valueSequence","elementIndex","valueKeyframesAsList","remainingTransition","calculatedDelay","numKeyframes","absoluteDelta","springTransition","springEasing","targetTime","remainder","unshift","subjectSequence","valueSequences","sort","valueOffset","valueEasing","createAnimationsFromSequence","valueOrElementOrSequence","isDOMKeyframes","MotionConfigContext","createContext","isStatic","reducedMotion","MotionContext","useIsomorphicLayoutEffect","LazyContext","strict","microtask","cancelMicrotask","useCreateMotionContext","inherit","getCurrentTreeVariants","useContext","variantLabelsAsDependency","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","useRender","useVisualState","ForwardRefComponent","externalRef","configAndProps","useLayoutId","lazyContext","visualElementRef","renderer","useInsertionEffect","wantsHandoff","HandoffComplete","postRender","animateChanges","useVisualElement","Provider","useCallback","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","htmlMotionConfig","addDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","addHoverEvent","isActive","callbackName","whileHover","setActive","isNodeOrChild","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","IntersectionObserver","initIntersectionObserver","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","shallowCompare","prevLength","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","DocumentProjectionNode","body","scrollTop","HTMLProjectionNode","documentNode","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","motion","IconMouse","IndexPage","hero","div","autoPlay","muted","loop"],"sourceRoot":""}