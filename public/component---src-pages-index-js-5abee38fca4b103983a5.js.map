{"version":3,"file":"component---src-pages-index-js-5abee38fca4b103983a5.js","mappings":"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","sources":["webpack://royal-flowers/./node_modules/@tabler/icons-react/dist/esm/icons/IconBook.js","webpack://royal-flowers/./src/components/footer.jsx","webpack://royal-flowers/./src/components/slider.jsx","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/wrap.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/sequence/create.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/resize/handle-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/resize/handle-window.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/resize/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://royal-flowers/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://royal-flowers/./node_modules/@tabler/icons-react/dist/esm/icons/IconMouse.js","webpack://royal-flowers/./src/pages/index.js"],"sourcesContent":["/**\n * @tabler/icons-react v2.47.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconBook = createReactComponent(\"book\", \"IconBook\", [\n  [\"path\", { d: \"M3 19a9 9 0 0 1 9 0a9 9 0 0 1 9 0\", key: \"svg-0\" }],\n  [\"path\", { d: \"M3 6a9 9 0 0 1 9 0a9 9 0 0 1 9 0\", key: \"svg-1\" }],\n  [\"path\", { d: \"M3 6l0 13\", key: \"svg-2\" }],\n  [\"path\", { d: \"M12 6l0 13\", key: \"svg-3\" }],\n  [\"path\", { d: \"M21 6l0 13\", key: \"svg-4\" }]\n]);\n\nexport { IconBook as default };\n//# sourceMappingURL=IconBook.js.map\n","import * as React from 'react'\r\nimport info from '../info.json'\r\nimport { Link } from 'gatsby'\r\nimport { StaticImage } from 'gatsby-plugin-image'\r\nimport { IconShoppingBag, IconBook} from '@tabler/icons-react'\r\n\r\n\r\nexport default function Footer(props){\r\n\r\n\r\n    const lines = info.slider.products.map(()=>{\r\n        \r\n        return(\r\n            <div className='w-[1px] h-full bg-charcoal'></div>\r\n        )\r\n\r\n    })\r\n\r\n    function Toggle(){\r\n        props.setVisible((prevState)=>!prevState)\r\n    }\r\n    return(\r\n        <footer className='absolute bottom-0 z-0 w-full px-2 md:px-8 py-6 flex flex-col justify-end items-center'>\r\n            <div className=' flex gap-3 justify-center block h-[30px] md:hidden mb-16'>\r\n                {lines}\r\n            </div>\r\n            <div className='flex flex-row justify-between px-2 w-full md:px-[20px] max-h-[50px] lg:max-h-[200px]'>\r\n                <nav className='md:flex-1 flex flex-row gap-4 items-end'>\r\n                    <div className='flex flex-col'>\r\n                        <span className='uppercase text-2xs'>Made in Ecuador</span>\r\n                        <span className='uppercase font-bold text-xs'>Red Roses Collection</span>\r\n                    </div>\r\n                    <span className='font-caslon text-5xl ml-20 hidden md:block'>0{props.number}/0{info.slider.quantity}</span>\r\n                </nav>\r\n                <div className=' flex gap-5 justify-center hidden md:block'>\r\n                    {lines}\r\n                </div>\r\n                <nav className='flex-1 flex flex-row gap-2 md:gap-4 justify-end items-end'>\r\n                    <button className='flex justify-center items-center w-auto h-full border aspect-square hover:bg-charcoal hover:text-cream transition-all duration-200 ease-in-out'><IconBook/></button>\r\n                    <button onClick={Toggle} className='px-2 md:px-6 py-2 border uppercase hover:bg-charcoal hover:text-cream transition-all duration-200 ease-in-out text-xs'>Inquire for purchase</button>\r\n\r\n                </nav>\r\n            </div>\r\n       \r\n        </footer>\r\n    )\r\n\r\n}\r\n","import * as React from 'react'\r\nimport info from '../info.json'\r\nimport { Link } from 'gatsby'\r\nimport { GatsbyImage, StaticImage } from 'gatsby-plugin-image'\r\n\r\nimport ProductCard from './product-card'\r\nimport Footer from './footer'\r\n\r\nexport default function Slider(props){\r\n\r\n    const [currentNumber, setCurrentNumber] = React.useState(1)\r\n\r\n\r\n    const [productList, setProductList] = React.useState([...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products, ...info.slider.products])\r\n\r\n\r\n    React.useEffect(()=>{\r\n\r\n        let move = 1\r\n        let gap = 12\r\n        const slider = document.getElementById(\"product-slider\")\r\n\r\n        function loadSlider() {\r\n            slider.scrollLeft = (slider.scrollWidth - slider.clientWidth ) / 2;\r\n\r\n        }\r\n\r\n        window.addEventListener('load', loadSlider());\r\n        \r\n        window.removeEventListener('load', loadSlider())\r\n\r\n        slider.addEventListener('click', (e)=>{\r\n            e.preventDefault()\r\n\r\n            // var producto = slider.childNodes[0]\r\n            // producto.style.transform = `translate(${producto.offsetWidth*5+(gap*5)+move}px, 0px)`\r\n\r\n\r\n        })\r\n        \r\n        slider.addEventListener('wheel', (e)=>{\r\n            e.preventDefault()\r\n      \r\n\r\n            slider.scrollLeft += e.deltaY;\r\n\r\n          \r\n\r\n\r\n            // move += (e.deltaY * 0.4)\r\n            // var containerChilds = slider.childNodes\r\n\r\n            // for (let i = 0; i < productList.length; i++) {\r\n                \r\n            //     const product = slider.childNodes[i];\r\n                \r\n            //     isOutOfView(slider, product)\r\n\r\n\r\n            //     if (product.classList.contains('out-of-view')){\r\n            //         // console.log(product.offsetLeft);\r\n            //         // product.style.transform = `translate(${product.offsetWidth*5+(gap*5)+move}px, 0px)`\r\n\r\n            //         // +(Math.abs(move))\r\n                    \r\n            //         // var element = Array.prototype.slice.call(slider.getElementsByTagName('div'), slider.childNodes.length-1)\r\n            //         // console.log(element);\r\n            //         // slider.insertBefore(element[0], slider.firstChild)\r\n\r\n            //     }else{\r\n            //         console.log(product);\r\n            //     }\r\n            //     // product.style.transform = `translate(${move}px, 0px)`\r\n\r\n\r\n                \r\n            // }\r\n\r\n\r\n            // var secondLastElement = containerChilds[(containerChilds.length - 5)]\r\n            // var fifthElement = containerChilds[4]\r\n\r\n            // secondLastElement.style.border = \"solid 2px red\"\r\n            \r\n            // fifthElement.style.border = \"solid 2px green\"\r\n    \r\n\r\n        })\r\n\r\n        // slider.addEventListener('wheel', (e)=>{\r\n        //     e.preventDefault()\r\n            \r\n        //     if(currentNumber < 5){\r\n\r\n        //         setCurrentNumber((prevState)=>prevState+1)\r\n\r\n        //     }else{\r\n        //         setCurrentNumber(1)\r\n\r\n        //     }\r\n               \r\n\r\n        // })\r\n        \r\n        \r\n\r\n        // function isOutOfView(container, element) {\r\n\r\n\r\n\r\n        //     var gapSize = 6\r\n            \r\n        //     var docViewRight = container.scrollLeft + container.offsetWidth + gapSize\r\n        //     var docViewLeft = container.scrollLeft\r\n            \r\n        //     var cardLeft = element.getBoundingClientRect().left\r\n        //     var cardWidth = element.offsetWidth\r\n\r\n        //     // console.log(cardLeft, container.offsetLeft);\r\n\r\n        //    if(cardLeft+cardWidth < 0 \r\n        //     // || cardLeft > container.offsetLeft+container.offsetWidth\r\n        //     ){\r\n        //         element.classList.add('out-of-view')\r\n\r\n        //        console.log(\"INVISIBLE\")\r\n\r\n        //     //    element.style.visibility = 'hidden'\r\n        //     //    element.style.transform = `translate(-${element.offsetWidth*2+move}px, 0px)`\r\n\r\n\r\n        //         // var element = Array.prototype.slice.call(container.getElementsByTagName('div'), 0, 1)\r\n        //         // var dom = new DOMparser().parseFromString(element, \"text/xml\")\r\n        //         // var firstCard = container.firstChild;\r\n        //         // var clone = firstCard.cloneNode(true)\r\n\r\n\r\n        //         // // console.log(element);\r\n\r\n                \r\n        //         // document.getElementById(\"product-slider\").removeChild(firstCard)\r\n\r\n        //         // container.appendChild(clone)\r\n\r\n        //     //    console.log(\"first\", productList);\r\n               \r\n        //     //    setProductList((prevState)=>{\r\n                   \r\n        //     //        return [...prevState, ...info.slider.products]\r\n                   \r\n        //     //     })                \r\n\r\n        //         // for (let i = 0; i < 2; i++) {\r\n        //         //     var element = container.childNodes[0]\r\n        //         //     console.log(element);\r\n        //         //     container.removeChild(element)\r\n                    \r\n        //         // }\r\n\r\n        //         // secondLastElement.style.border = \"solid 2px black\"\r\n\r\n               \r\n        //    }\r\n\r\n\r\n        // //     if(fifthElement.offsetLeft < docViewLeft){\r\n\r\n        // //         console.log(\"ELIMINAR\");\r\n\r\n        // //         // for (let i = 0; i < 5; i++) {\r\n        // //         //     var element = container.childNodes[0]\r\n        // //         //     console.log(element);\r\n        // //         //     container.removeChild(element)\r\n                    \r\n        // //         // }\r\n\r\n        // //         // setProductList((prevState)=>{\r\n        // //         //     const newState = [...prevState]\r\n        // //         //     newState.slice(5, -1)                  \r\n                    \r\n        // //         //     console.log(newState);\r\n\r\n        // //         //     return newState\r\n        // //         // })\r\n\r\n        // //         fifthElement.style.border = \"solid 2px blue\"\r\n\r\n                \r\n        // //     }\r\n            \r\n        // }\r\n\r\n    })\r\n\r\n    const products = productList.map((product, index)=>{\r\n        \r\n        return(\r\n            <ProductCard image={product.image} size={15} title={product.title} index={index}/>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className='h-[100vh] w-full relative'>\r\n            \r\n            <div className=\"w-full h-full scroll-smooth grid grid-flow-col auto-cols-max items-center gap-3 overflow-x-hidden overflow-y-none whitespace-nowrap flex-nowrap\" id='product-slider'>\r\n                {products}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return resolvedKeyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { frame, cancelFrame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.unsetTransforms();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureInitialState();\n        });\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.renderEndStyles();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureEndState();\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n    frame.resolveKeyframes(measureAllKeyframes);\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n    cancelFrame(readAllKeyframes);\n    cancelFrame(measureAllKeyframes);\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    unsetTransforms() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, removeNonTranslationalTransform, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        const noneKeyframeIndexes = [];\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (!originType || !targetType || originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    unsetTransforms() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        this.removedTransforms = removeNonTranslationalTransform(element);\n        const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        element.getValue(name, finalKeyframe).jump(finalKeyframe, false);\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n    }\n    renderEndStyles() {\n        this.element.render();\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        unresolvedKeyframes[unresolvedKeyframes.length - 1] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (name === \"height\" && this.suspendedScrollY !== undefined) {\n            window.scrollTo(0, this.suspendedScrollY);\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                const finalKeyframe = getFinalKeyframe(keyframes, this.options);\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(finalKeyframe);\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        this._resolved = {\n            keyframes,\n            ...this.initPlayback(keyframes),\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = () => {\n                resolve();\n                this.updateFinishedPromise();\n            };\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes) => this.onKeyframesResolved(resolvedKeyframes);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = this.resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        return millisecondsToSeconds(this.resolved.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.state = \"idle\";\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.teardown();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes) => this.onKeyframesResolved(resolvedKeyframes), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes) {\n        let duration = this.options.duration || 300;\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const { motionValue, name } = this.options;\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { duration } = this.resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { animation } = this.resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { animation } = this.resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { animation } = this.resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { animation } = this.resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { animation } = this.resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { animation } = this.resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { animation } = this.resolved;\n        animation.play();\n    }\n    pause() {\n        const { animation } = this.resolved;\n        animation.pause();\n    }\n    stop() {\n        this.isStopped = true;\n        const { animation, keyframes } = this.resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            motionValue.setWithVelocity(sampleAnimation.sample(this.time - sampleDelta).value, sampleAnimation.sample(this.time).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        this.resolved.animation.finish();\n    }\n    cancel() {\n        this.resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.12\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","import { progress } from '../../../utils/progress.mjs';\nimport { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { namedEdges, resolveEdge } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","import { calcInset } from './inset.mjs';\nimport { ScrollOffset } from './presets.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { interpolate } from '../../../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../../../utils/offsets/default.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction getTargetSize(target) {\n    return \"getBBox\" in target && target.tagName !== \"svg\"\n        ? target.getBBox()\n        : { width: target.clientWidth, height: target.clientHeight };\n}\nfunction resolveOffsets(container, info, options) {\n    const { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : getTargetSize(target);\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition));\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = info[axis].interpolate(info[axis].current);\n}\n\nexport { resolveOffsets };\n","function calcInset(element, container) {\n    const inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current.tagName === \"svg\") {\n            /**\n             * This isn't an ideal approach to measuring the offset of <svg /> tags.\n             * It would be preferable, given they behave like HTMLElements in most ways\n             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we\n             * can't use .getBBox() like most SVG elements as these provide the offset\n             * relative to the SVG itself, which for <svg /> is usually 0x0.\n             */\n            const svgBoundingBox = current.getBoundingClientRect();\n            current = current.parentElement;\n            const parentBoundingBox = current.getBoundingClientRect();\n            inset.x += svgBoundingBox.left - parentBoundingBox.left;\n            inset.y += svgBoundingBox.top - parentBoundingBox.top;\n        }\n        else if (current instanceof SVGGraphicsElement) {\n            const { x, y } = current.getBBox();\n            inset.x += x;\n            inset.y += y;\n            let svg = null;\n            let parent = current.parentNode;\n            while (!svg) {\n                if (parent.tagName === \"svg\") {\n                    svg = parent;\n                }\n                parent = current.parentNode;\n            }\n            current = svg;\n        }\n        else {\n            break;\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { warnOnce } from '../../../utils/warn-once.mjs';\nimport { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n    /**\n     * In development mode ensure scroll containers aren't position: static as this makes\n     * it difficult to measure their relative positions.\n     */\n    if (process.env.NODE_ENV !== \"production\") {\n        if (container && target && target !== container) {\n            warnOnce(getComputedStyle(container).position !== \"static\", \"Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.\");\n        }\n    }\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","import { resize } from '../resize/index.mjs';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.documentElement, ...options } = {}) {\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers)\n                handler.measure();\n        };\n        const updateAll = () => {\n            for (const handler of containerHandlers) {\n                handler.update(frameData.timestamp);\n            }\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        const listener = () => {\n            frame.read(measureAll, false, true);\n            frame.read(updateAll, false, true);\n            frame.update(notifyAll, false, true);\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        var _a;\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n","import { resizeElement } from './handle-element.mjs';\nimport { resizeWindow } from './handle-window.mjs';\n\nfunction resize(a, b) {\n    return typeof a === \"function\" ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","import { scrollInfo } from './track.mjs';\nimport { observeTimeline } from './observe.mjs';\nimport { supportsScrollTimeline } from './supports.mjs';\n\nfunction scrollTimelineFallback({ source, axis = \"y\" }) {\n    // ScrollTimeline records progress as a percentage CSSUnitValue\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[axis].progress * 100;\n    }, { container: source, axis });\n    return { currentTime, cancel };\n}\nconst timelineCache = new Map();\nfunction getTimeline({ source = document.documentElement, axis = \"y\", } = {}) {\n    if (!timelineCache.has(source)) {\n        timelineCache.set(source, {});\n    }\n    const elementCache = timelineCache.get(source);\n    if (!elementCache[axis]) {\n        elementCache[axis] = supportsScrollTimeline()\n            ? new ScrollTimeline({ source, axis })\n            : scrollTimelineFallback({ source, axis });\n    }\n    return elementCache[axis];\n}\nfunction scroll(onScroll, options) {\n    const timeline = getTimeline(options);\n    if (typeof onScroll === \"function\") {\n        return observeTimeline(onScroll, timeline);\n    }\n    else {\n        return onScroll.attachTimeline(timeline);\n    }\n}\n\nexport { scroll };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * @tabler/icons-react v2.47.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconMouse = createReactComponent(\"mouse\", \"IconMouse\", [\n  [\n    \"path\",\n    {\n      d: \"M6 3m0 4a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v10a4 4 0 0 1 -4 4h-4a4 4 0 0 1 -4 -4z\",\n      key: \"svg-0\"\n    }\n  ],\n  [\"path\", { d: \"M12 7l0 4\", key: \"svg-1\" }]\n]);\n\nexport { IconMouse as default };\n//# sourceMappingURL=IconMouse.js.map\n","import * as React from \"react\"\r\nimport Header from '../components/header'\r\nimport Slider from \"../components/slider\"\r\n\r\nimport info from \"../info.json\"\r\nimport { animate, motion, scroll } from \"framer-motion\"\r\n\r\nimport { IconMouse } from \"@tabler/icons-react\"\r\n\r\nimport Footer from \"../components/footer\"\r\nimport Form from \"../components/form\"\r\n\r\nexport default function IndexPage(){\r\n  const [visible, setVisible] = React.useState(false)\r\n  const [currentNumber, setCurrentNumber] = React.useState(1)\r\n\r\n  React.useEffect(()=>{\r\n\r\n    const hero = document.getElementById('hero-video')\r\n\r\n    let movement = 1\r\n\r\n    function moveHero() {\r\n\r\n      // e.preventDefault()\r\n\r\n      // console.log(e);\r\n\r\n      // // movement += e.pageY * 0.01\r\n      \r\n\r\n      // // if(e.deltaY < 0){\r\n        \r\n      // //   hero.style.transform = `translate(0px, ${movement}px)`\r\n      // // }else{\r\n      // //   hero.style.transform = `translate(0px, -${movement}px)`\r\n\r\n      // // }\r\n      // console.log(movement);\r\n\r\n    }\r\n\r\n    let boolWheel = false\r\n    document.addEventListener('wheel', ()=>{\r\n\r\n      \r\n      if(boolWheel === false){\r\n        animate(hero, {transform: ['translate(0px, 0px)', 'translate(0px, -100vh)'], opacity: [100, 100]}, {duration: 1.5}, {type: 'spring'})\r\n        boolWheel = true\r\n      }\r\n\r\n    })\r\n\r\n   \r\n\r\n\r\n\r\n    // document.removeEventListener('wheel', moveHero(hero))\r\n\r\n    // transform: [\"none\", \"translateY(-100%)\"],\r\n    scroll(\r\n      animate(hero, { opacity: [100, 0]}, {duration: 1})\r\n    )\r\n  })\r\n  \r\n\r\n  console.log(visible);\r\n\r\n  return (\r\n    <main className=\"flex flex-col relative\">\r\n\r\n      <Form visible={visible} setVisible={setVisible}/>\r\n      <Header/>\r\n\r\n\r\n      {/* HERO */}\r\n      <motion.div \r\n          className=\"overflow-hidden top-0 left-0 min-w-[100%] min-h-[100vh] h-[100vh] bg-charcoal z-10 absolute transition-all\"\r\n          id=\"hero-video\"\r\n        >\r\n        <div className=\"z-10 w-full absolute bottom-0 pb-[10vh]\">\r\n          <div className=\"flex flex-col justify-center items-center gap-5\">\r\n            <IconMouse className=\"cream\" color=\"#F6F5F2\" size={50} stroke={1}/>\r\n            <span className=\"uppercase text-md text-cream\">{info.hero.text}</span>\r\n          </div>\r\n        </div>\r\n        <video autoPlay muted loop className=\"min-h-[100vh] min-w-[100%] opacity-60 z-0 absolute\">\r\n          <source src={'../../static/home-page-hero-video.mp4'} type=\"video/mp4\"/>\r\n        </video>\r\n\r\n      </motion.div>\r\n\r\n      <Slider/>\r\n\r\n      <Footer number={currentNumber} setVisible={setVisible}/>\r\n\r\n      \r\n    </main>\r\n  )\r\n}\r\n\r\n"],"names":["IconBook","createReactComponent","d","key","Footer","props","lines","info","map","className","number","onClick","setVisible","prevState","Slider","currentNumber","setCurrentNumber","React","productList","setProductList","slider","document","getElementById","loadSlider","scrollLeft","scrollWidth","clientWidth","window","addEventListener","removeEventListener","e","preventDefault","deltaY","products","product","index","image","size","title","id","noop","any","warning","invariant","resolveElements","elements","scope","selectorCache","_a","root","Boolean","current","querySelectorAll","Element","Array","from","visualElementStore","WeakMap","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","cancelFrame","requestAnimationFrame","observeTimeline","update","timeline","prevProgress","onFrame","currentTime","progress","value","memo","result","undefined","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","filter","then","onResolve","onReject","Promise","all","catch","getAll","propName","setAll","newValue","attachTimeline","cancelAll","animation","pause","time","duration","cancelTimeline","stop","speed","runAll","methodName","controls","play","complete","transformPropOrder","transformProps","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","startsWith","sqrt","getValueTransition","transition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","clearTime","set","newTime","queueMicrotask","isZeroValueString","v","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","parse","transform","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","x","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolver","needsMeasurement","unsetTransforms","measureInitialState","renderEndStyles","measureEndState","readAllKeyframes","readKeyframes","resolveKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","name","motionValue","isAsync","isComplete","scheduleResolve","read","currentValue","get","finalKeyframe","valueAsRead","readValue","resume","isColorString","testProp","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","super","owner","noneKeyframeIndexes","keyframe","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","origin","target","originType","targetType","removedTransforms","visualElement","getValue","render","removeNonTranslationalTransform","jump","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","scrollTo","unsetTransformName","unsetTransformValue","isAnimatable","isArray","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","updateFinishedPromise","_resolved","onKeyframesResolved","velocity","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","isEasingArray","mirrorEasing","easing","p","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","definition","x1","y1","x2","y2","combineFunctions","pipe","transformers","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","fillOffset","offset","remaining","offsetProgress","defaultOffset","arr","keyframeValues","times","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","frameloopDriver","passTimestamp","start","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","playbackSpeed","pendingPlayState","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","onStop","teardown","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","animate","iterations","direction","animateStyle","pendingTimeline","onfinish","playbackRate","playState","setWithVelocity","static","HTMLElement","getProps","animateMotionValue","isHandoff","valueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","isMotionValue","isWillChangeMotionValue","isKeyframesTarget","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","resolveVariantFromProps","custom","currentValues","variants","resolveVariant","getCurrent","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","willChange","animationTypeState","animationState","getState","latestValues","valueTarget","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","isSVGElement","SVGElement","tagName","scaleCorrectors","isForcedMotionValue","layout","layoutId","scrapeMotionValuesFromProps","prevProps","style","newValues","charAt","toUpperCase","createDelta","translate","originPoint","createBox","isRefObject","ref","isBrowser","prefersReducedMotion","hasReducedMotionListener","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","featureProps","exit","drag","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","Map","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","projection","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","initialMotionValues","_props","_prevProps","mount","instance","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","unmount","valueIsTransform","removeOnChange","latestValue","preRender","isTransformDirty","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","loadFeatures","renderedProps","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","Feature","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","dragConstraints","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","updateFeatures","feature","isMounted","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevPresenceContext","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getTransformPagePoint","transformPagePoint","getClosestVariantNode","getVariantContext","startAtParent","context","prop","child","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","args","DOMVisualElement","arguments","compareDocumentPosition","vars","translateAlias","numTransforms","getValueAsType","buildHTMLStyles","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","calcOrigin","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","camelCaseAttributes","renderHTML","styleProp","assign","getProjectionStyles","setProperty","renderSVG","_styleProp","setAttribute","tag","SVGVisualElement","defaultType","getAttribute","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","point","applyPointDelta","boxScale","applyAxisDelta","axis","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","HTMLVisualElement","computedStyle","childSubscription","textContent","createVisualElement","node","animateSingleValue","motionValue$1","createGeneratorEasing","calcNextTime","labels","wrap","rangeSize","getEasingForSegment","addKeyframes","sequence","endTime","at","eraseKeyframes","compareByTime","defaultSegmentEasing","getSubjectSequence","subject","sequences","getValueSequence","keyframesAsList","isNumber","isNumberKeyframesArray","animateElements","elementOrSelector","numElements","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","defaultDuration","elementCache","timeLabels","prevTime","segment","resolveValueSequence","valueKeyframes","valueSequence","elementIndex","valueKeyframesAsList","remainingTransition","calculatedDelay","numKeyframes","absoluteDelta","springTransition","springEasing","targetTime","remainder","unshift","subjectSequence","valueSequences","sort","valueOffset","valueEasing","createAnimationsFromSequence","valueOrElementOrSequence","isDOMKeyframes","resizeHandlers","observer","notifyTarget","contentRect","borderBoxSize","contentSize","inlineSize","blockSize","getBBox","offsetWidth","offsetHeight","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","elementHandlers","observe","unobserve","windowCallbacks","windowResizeHandler","resizeWindow","innerWidth","innerHeight","createScrollInfo","scrollLength","targetOffset","targetLength","containerLength","position","updateAxisInfo","axisName","ScrollOffset","Enter","Exit","Any","All","namedEdges","center","end","resolveEdge","edge","inset","asNumber","documentElement","clientHeight","resolveOffset","targetInset","offsetDefinition","targetPoint","containerPoint","includes","resolveOffsets","container","lengthLabel","offsetLeft","offsetTop","offsetParent","svgBoundingBox","parentElement","parentBoundingBox","SVGGraphicsElement","svg","parentNode","calcInset","targetSize","scrollHeight","getTargetSize","containerSize","numOffsets","interpolatorOffsets","createOnScrollHandler","onScroll","measure","updateScrollInfo","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scrollInfo","containerHandlers","containerHandler","measureAll","updateAll","passive","currentHandlers","scrollListener","timelineCache","getTimeline","scrollTimelineFallback","MotionConfigContext","createContext","isStatic","reducedMotion","MotionContext","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","microtask","cancelMicrotask","useCreateMotionContext","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","useRender","useVisualState","Component","ForwardRefComponent","forwardRef","externalRef","configAndProps","useLayoutId","lazyContext","visualElementRef","useRef","renderer","useInsertionEffect","wantsHandoff","HandoffComplete","postRender","animateChanges","useVisualElement","Provider","useCallback","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","htmlMotionConfig","addDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","addHoverEvent","isActive","callbackName","whileHover","setActive","isNodeOrChild","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","shallowCompare","prevLength","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","body","scrollTop","HTMLProjectionNode","documentNode","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","motion","IconMouse","IndexPage","visible","hero","boolWheel","console","log","div","autoPlay","muted","loop","src"],"sourceRoot":""}